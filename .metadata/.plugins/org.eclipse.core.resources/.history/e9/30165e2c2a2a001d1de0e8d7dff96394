package com.devsuperior.dsdeliver.controllers.exceptions;

import java.time.LocalDateTime;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

@ControllerAdvice
public class ApiExceptionHandler extends ResponseEntityExceptionHandler {
	
	@Override
	protected ResponseEntity<Object> handleExceptionInternal(Exception ex, Object body, HttpHeaders headers,
			HttpStatus status, WebRequest request) {
		if(body == null) {
			body = Problem.builder().title(status.getReasonPhrase()).status(status.value()).build();
		} else if(body instanceof String) {
			body = Problem.builder().title((String)body).status(status.value()).build();
		}
		return super.handleExceptionInternal(ex, body, headers, status, request);
	}
	
	private Problem.ProblemBuilder createProblemBuilder(HttpStatus status,ProblemType problem,String details){
		return Problem.builder().status(status.value())
				.detail(details)
				.timeStamp(LocalDateTime.now())
				.title(problem.getTitle())
				.type(problem.getUri());
	}
}
